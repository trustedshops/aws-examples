---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  archExampleApiGatewayToLambdaRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: archExampleApiGatewayToLambdaRestApi
  HelloResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: archExampleApiGatewayToLambdaRestApi
      ParentId:
        Fn::GetAtt:
        - archExampleApiGatewayToLambdaRestApi
        - RootResourceId
      PathPart: hello
  GreetingRequest:
    DependsOn: archExampleApiGatewayToLambdaLambdaPermission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - Fn::GetAtt:
              - archExampleApiGatewayToLambdaGreetingLambda
              - Arn
            - "/invocations"
        IntegrationResponses:
        - StatusCode: 200
        RequestTemplates:
          application/json:
            Fn::Join:
            - ''
            - - "{"
              - '  "name": "$input.params(''name'')"'
              - "}"
      RequestParameters:
        method.request.querystring.name: false
      ResourceId:
        Ref: HelloResource
      RestApiId:
        Ref: archExampleApiGatewayToLambdaRestApi
      MethodResponses:
      - StatusCode: 200
  archExampleApiGatewayToLambdaLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Fn::GetAtt:
        - archExampleApiGatewayToLambdaGreetingLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: archExampleApiGatewayToLambdaRestApi
          - "/*"
  archExampleApiGatewayToLambdaGreetingLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile:
          Fn::Join:
          - "\n"
          - - "'use strict';"
            - ''
            - "// Greeter Lambda"
            - exports.handler = (event, context, callback) => {
            - "  console.log('Event:', JSON.stringify(event));"
            - "  const name = event.name || 'World';"
            - "  const response = {greeting: `Hello, ${name}!`};"
            - "  callback(null, response);"
            - "};"
      Description: A greeting function
      FunctionName: archExampleApiGatewayToLambdaGreetingLambda
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - archExampleApiGatewayToLambdaLambdaExecutionRole
        - Arn
      Runtime: nodejs4.3
  archExampleApiGatewayToLambdaLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
